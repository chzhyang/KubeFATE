name: A workflow for docker deploy ci
on: push
jobs:
  build:
    name: Docker deploy action
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: generate config
      if: success()
      run: |
        echo "#generate config:"
        cd ./docker-deploy
        bash generate_config.sh
        echo "#check output:"
        ls ./outputs
        cd ../
#      - uses: ./action-dockerdeploy
#        with:
#          MY_NAME: "Mona"

    - name: docker deploy
      if: success()
      run: |
        # get host ip
        ifconfig eth0 | grep "inet" | grep -v inet6 | awk '{ print $2}' 
        # ifconfig eth0 | grep "inet" | grep -v inet6 | awk '{ print $2}' | cut -d "/" -f1
        # ifconfig ens160 | grep "inet" | grep -v inet6 | awk '{ print $2}'
        sudo mkdir -p /data/projects/fate
        echo "#docker-compose begin"
        echo "Enter ./docker-deploy"
        cd ./docker-deploy
        target_party_id=10000
        target_party_ip=
        cp ./outputs/confs-${target_party_id}.tar /confs-${target_party_id}
        rm -f ${WORKINGDIR}/outputs/confs-$target_party_id.tar
        # echo "#replace scp with cp, delete ssh"
        # cp docker_deploy.sh docker_deploy.sh.bk
        # sed -i "s/scp \${/cp \${/g" docker_deploy.sh
        # sed -i "/eeooff/d" docker_deploy.sh
    
        # echo "#Run deploy shell"
        # bash docker_deploy.sh all

        echo "#Check containers"
        docker ps

        echo "#Run toy_example"
        docker exec -it confs-10000_python_1 bash
        cd /data/projects/fate/python/examples/toy_example/
        python run_toy_example.py 10000 1000 1